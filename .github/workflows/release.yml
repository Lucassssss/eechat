name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Release Files
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 查看构建产物
        run: |
          ls -la release/ || echo "release directory not found"
          find release -type f | sort

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: release/${{ env.APP_VERSION }}
          if-no-files-found: warn
          retention-days: 5
        env:
          APP_VERSION: 1.1.0

  release:
    name: 发布 Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 获取版本号
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        shell: bash

      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 显示下载的文件
        run: |
          find artifacts -type f | sort
        shell: bash

      - name: 准备发布文件
        run: |
          mkdir -p release_files
          # 复制所有安装包文件到发布目录
          find artifacts -name "*.exe" -o -name "*.dmg" -o -name "*.AppImage" -o -name "*.zip" -o -name "*.deb" -o -name "*.rpm" -o -name "latest*.yml" | xargs -I {} cp {} release_files/
          ls -la release_files/
        shell: bash

      - name: 创建 Release
        uses: softprops/action-gh-release@v1
        with:
          name: EE Chat ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: release_files/*
          generate_release_notes: true
          body: |
            ## EE Chat 发布版本 ${{ steps.get_version.outputs.VERSION }}
            
            ### 下载
            - Windows: EE Chat-Windows-1.1.0-Setup.exe
            - macOS: EE Chat-Mac-1.1.0-Installer.dmg
            - Linux: EE Chat-Linux-1.1.0.AppImage
            
            ### 更新日志
            自动从提交记录生成
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}